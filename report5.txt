# Лабораторная работа №5. UI Tests.

## Цели
1. Ознакомиться с принципами и получить практические навыки разработки UI тестов для Android приложений.

## Задачи
Предполагается, что все задачи решаются с помощью Instrumentation (Android) tests и Espresso Framework, если иное явно не указано в тексте задания.

### Задача 1. Простейший UI тест
Необходимо ознакомиться с Espresso Framework: https://developer.android.com/training/testing/espresso и разработать приложение, в котором есть одна кнопка (`Button`) и одно текстовое поле (`EditText`). При (первом) нажатии на кнопку текст на кнопке должен меняться.

Нужно написать Espresso тест, который проверяет, что при повороте экрана содержимое текстового поля (каким бы оно ни было) сохраняется, а надпись на кнопке сбрасывается в исходное состояние. 

#### Указания
1. Для поворота экрана можно воспользоваться 
```
        activityScenarioRule.scenario.onActivity { activity ->
            activity.setRequestedOrientation(
                ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE
            )
        }
```
(см. также https://stackoverflow.com/a/42591933

2. Если описанное поведение не наблюдается, укажите версию ОС и наблюдаемое поведение. Адаптируйте тест, чтобы он соответствовал реальному поведению. В отчете опишите как именно был адаптирован тест.
2. Если описанное поведение наблюдается, объясните, кто и в какой момент сохраняет состояние `EditText`. При необходимости освежите в памяти знания, усвоенные в Лаб. №2.

### Задача 2. Тестирование навигации.
Необходимо взять приложение из Лаб №3 о навигации (любое из решений) и написать UI тесты, проверяющие навигацию между 4-мя исходными Activity/Fragment (1-2-3-About). В отчете описать, что проверяет каждый тест.

#### Указания
1. Должно получиться несколько тестов. Если получается один огромный тест, который проверяет сразу все, - его нужно разделить на более мелкие тесты некоторым разумным образом.
1. Проверяйте глубину backstack (например, с помощью навигации "назад" из разных исходных состояний)
1. Проверяйте навигацию "вперед": кнопки должны открывать соответствующие Activity/Fragment
1. Проверяйте, что при повороте экрана состояние не теряется

### Задача 3(*). Доработка приложения из Лаб №3 (по желанию).
Попробуйте применить принцип TDD: у Вас в руках есть тест (из предыдущего пункта), который описывает некоторое желаемое поведение. Три решения Лаб №3 (два с помощью Activity и одно с помощью Fragment) должны приводить к одному и тому же результату (с т.з. пользователя). Убедитесь, что все три варианта решения проходят разработанные тесты. При необходимости исправьте программу или тесты (в тестах тоже бывают ошибки и неточности).

